
name: apply_Git_Actions@v1.0


on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      skip-wait:
        type: boolean
        description: 'Skip 5 minutes wait for VMs, because VMs already provisioned'
        default: false

jobs:
  build_job:
    name: build_job
    runs-on: ubuntu-latest

    container:
      image: andif888/docker-pataz:v0.9.9

    steps:

      - name: checkout_repo
        uses: actions/checkout@v3

      - name: show versions in container
        run: |
          ansible --version
          packer --version
          terraform --version
          az --version

      #- name: apply__core
      #  id: apply__core
      #  run: |
      #    echo -n ${{ secrets.envfile }} > .env && . ./.env
      #    export vms_already_alive=${{ github.event.inputs.skip-wait }}
      
      #- name: Print Deploment Package
      #  run:  |
      #        echo "Deploment Package name und Version ${{ env.Package_Name  }}"
      #        echo "Applikation name: ${{ env.Application_Name }}"

      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      - name: Run ansible-lint
        # replace `main` with any valid ref, or tags like `v6`
        uses: ansible-community/ansible-lint-action@v6.0.2
        with:
          args: "ansible" # my ansible files in a folder


      #- name: write inventory to file
      #  env:
      #      INVENTORY: ${{ secrets.INVENTORY }}
      #  run: 'echo "$INVENTORY" > inventory'

      - name: Install SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_KEY }}
          name: id_rsa # optional
          known_hosts: ${{ secrets.KNOWN_HOSTS }}
          # config: ${{ secrets.CONFIG }} # ssh_config; optional
          if_key_exists: fail # replace / ignore / fail; optional (defaults to fail)

      - name: run playbook
        run:  ansible-playbook main.yml --tags ping
        #ansible-playbook -i inventory hello-world.yaml
          
      
      #./apply__core.sh
      - name: cleanup_ssh
        if: always()
        run: rm -rf ./.github/.ssh

      - name: Bump version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          default_bump: minor

      #- name: Create a GitHub release
      #  uses: ncipollo/release-action@v1
      #  with:
      #    tag: ${{ steps.tag_version.outputs.new_tag }}
      #    name: Release ${{ steps.tag_version.outputs.new_tag }}
      #    artifacts: "output/rdp/*.rdp"
      #    bodyFile: "output/README.md"